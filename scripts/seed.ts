import {PrismaClient} from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
    // Delete existing data
    await prisma.post.deleteMany();
    await prisma.user.deleteMany();

    const user = await prisma.user.upsert({
        where: {email: 'kpriss2dev@example.com'},
        update: {},
        create: {
            email: 'kpriss2dev@example.com',
            name: 'Kpriss2Dev',
            image: 'https://avatars.githubusercontent.com/u/583231?v=4',
        },
    });
    const articles = [
        {
            title: "Next.js 14 : Une rÃ©volution dans le dÃ©veloppement web",
            description: "DÃ©couvrez les fonctionnalitÃ©s majeures de Next.js 14 qui redÃ©finissent le dÃ©veloppement web moderne.",
            image: "https://images.unsplash.com/photo-1504384308090-c894fdcc538d",
            content: {
                blocks: [
                    {
                        type: 'text',
                        content: "Next.js 14 marque un tournant majeur dans lâ€™Ã©cosystÃ¨me JavaScript. Lâ€™introduction du Partial Prerendering (PPR) permet de prÃ©-gÃ©nÃ©rer uniquement les parties statiques dâ€™une page tout en gardant du contenu dynamique. Cette approche hybride optimise le SEO et booste considÃ©rablement la performance des applications."
                    },
                    {
                        type: 'quote',
                        content: "Avec Next.js 14, le futur du web devient prÃ©visible et plus rapide.",
                        author: "Vercel CEO"
                    },
                    {
                        type: 'text',
                        content: "Les Server Actions Ã©voluent Ã©galement, facilitant la gestion des requÃªtes serveurs sans surcharger le client. Le systÃ¨me de cache intelligent de cette version donne aux dÃ©veloppeurs un contrÃ´le granulaire sur la revalidation des donnÃ©es."
                    },
                    {
                        type: 'image',
                        url: "https://images.unsplash.com/photo-1531482615713-2afd69097998",
                        caption: "Illustration des performances accrues avec Next.js 14"
                    }
                ]
            },
            published: true,
            authorId: user.id
        },

        {
            title: "Node.js 20 : SÃ©curitÃ© renforcÃ©e et performances au sommet",
            description: "Zoom sur les nouveautÃ©s de Node.js 20 qui rÃ©volutionnent le backend moderne.",
            image: "https://images.unsplash.com/photo-1505232070786-70637c2d5b52",
            content: {
                blocks: [
                    {
                        type: 'text',
                        content: "Node.js 20 apporte un vent de fraÃ®cheur aux applications backend. La grosse nouveautÃ© ? Le systÃ¨me de permissions qui permet de restreindre l'accÃ¨s aux ressources comme les fichiers ou les sockets rÃ©seau, limitant drastiquement les vecteurs dâ€™attaques potentielles."
                    },
                    {
                        type: 'code',
                        content: "node --allow-fs --allow-env app.js",
                        language: "bash"
                    },
                    {
                        type: 'text',
                        content: "La mise Ã  jour de V8 en version 11.3 booste encore la vitesse dâ€™exÃ©cution. De plus, le support natif des WebAssembly Garbage Collection permet dâ€™intÃ©grer des modules WASM plus efficacement dans vos apps Node.js."
                    },
                    {
                        type: 'image',
                        url: "https://images.unsplash.com/photo-1518770660439-4636190af475",
                        caption: "Node.js 20 au cÅ“ur des architectures modernes"
                    }
                ]
            },
            published: true,
            authorId: user.id
        },

        {
            title: "Rust : Le langage de la fiabilitÃ© et de la performance",
            description: "Rust sâ€™impose comme la rÃ©fÃ©rence pour le dÃ©veloppement systÃ¨me moderne.",
            image: "https://images.unsplash.com/photo-1581090700227-1e37b190418e",
            content: {
                blocks: [
                    {
                        type: 'text',
                        content: "Rust sÃ©duit par son approche unique : garantir la sÃ©curitÃ© mÃ©moire sans garbage collector. GrÃ¢ce Ã  son systÃ¨me de propriÃ©tÃ© et son borrow checker, il Ã©limine toute une catÃ©gorie de bugs liÃ©s aux accÃ¨s concurrents ou aux fuites mÃ©moire."
                    },
                    {
                        type: 'quote',
                        content: "Rust ne vous demande pas dâ€™Ã©crire du code sÃ©curisÃ©, il lâ€™impose.",
                        author: "The Rust Book"
                    },
                    {
                        type: 'text',
                        content: "AdoptÃ© par Mozilla, Dropbox ou encore Microsoft, Rust sâ€™impose dans les systÃ¨mes critiques oÃ¹ la fiabilitÃ© et la performance sont primordiales. La communautÃ© grandit et lâ€™Ã©cosystÃ¨me devient de plus en plus riche."
                    },
                    {
                        type: 'image',
                        url: "https://images.unsplash.com/photo-1610484826967-c27850aa3244",
                        caption: "Rust, la puissance au service de la sÃ©curitÃ©"
                    }
                ]
            },
            published: true,
            authorId: user.id
        },

        {
            title: "Micro-frontends : La scalabilitÃ© des interfaces web",
            description: "DÃ©couvrez comment les micro-frontends transforment la maniÃ¨re de dÃ©velopper de grandes applications frontend.",
            image: "https://images.unsplash.com/photo-1517430816045-df4b7de169fb",
            content: {
                blocks: [
                    {
                        type: 'text',
                        content: "Les micro-frontends sont Ã  la frontend ce que les microservices sont au backend. Chaque Ã©quipe peut dÃ©velopper, dÃ©ployer et maintenir sa partie de lâ€™interface de maniÃ¨re totalement indÃ©pendante."
                    },
                    {
                        type: 'text',
                        content: "Cette approche rÃ©duit les risques de rÃ©gressions globales et permet une Ã©volution plus rapide des produits digitaux. Des gÃ©ants comme Spotify ou Amazon utilisent cette architecture pour leurs plateformes Ã  grande Ã©chelle."
                    },
                    {
                        type: 'image',
                        url: "https://images.unsplash.com/photo-1556761175-5973dc0f32e7",
                        caption: "Architecture typique de micro-frontends"
                    }
                ]
            },
            published: true,
            authorId: user.id
        },

        {
            title: "GraphQL vs REST : Le duel des API modernes",
            description: "Analyse complÃ¨te des avantages et inconvÃ©nients de GraphQL face aux API REST traditionnelles.",
            image: "https://images.unsplash.com/photo-1581090700227-1e37b190418e",
            content: {
                blocks: [
                    {
                        type: 'text',
                        content: "REST a longtemps dominÃ© le monde des API. Cependant, GraphQL, initiÃ© par Facebook, bouscule cet univers en proposant une approche plus flexible et plus performante, notamment pour les applications mobiles et les SPAs."
                    },
                    {
                        type: 'quote',
                        content: "Avec GraphQL, ce nâ€™est plus lâ€™API qui dÃ©cide ce quâ€™elle envoie, mais le client.",
                        author: "Apollo Team"
                    },
                    {
                        type: 'text',
                        content: "Le principal avantage de GraphQL est la rÃ©duction du nombre de requÃªtes nÃ©cessaires pour rÃ©cupÃ©rer des donnÃ©es complexes. En contrepartie, la gestion du cache est plus complexe et nÃ©cessite des outils spÃ©cifiques."
                    },
                    {
                        type: 'image',
                        url: "https://images.unsplash.com/photo-1526378722484-bd91ca387e72",
                        caption: "GraphQL, une API taillÃ©e pour le futur"
                    }
                ]
            },
            published: true,
            authorId: user.id
        },

    ]


    for (const article of articles) {
        await prisma.post.create({
            data: {
                ...article,
                slug: article.title
                    .toLowerCase()
                    .replace(/[^\w\s]/g, '')
                    .replace(/\s+/g, '-')
            }
        });
    }

    console.log('Database has been seeded. ðŸŒ±')
}

main()
    .catch((e) => {
        console.error(e);
        process.exit(1);
    })
    .finally(async () => {
        await prisma.$disconnect();
    });
